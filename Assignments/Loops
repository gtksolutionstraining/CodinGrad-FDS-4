for i in range(10):
    for j in range(10):
        print(i,j)

==> For Every ith iteration j number of iterations will be there
==> Total number of iterations 10*10

for i in range(n):
    for j in range(m):
        print(n,m)

==> Total Number of iterations => m*n

Total Number of Iterations ==> Time Complexity

for i in range(n):
    print(i)

Time Complexity ==> O(n)
Time Complexity ==> O(m*n)
Time Complexity ==> O(n^2)

for i in range(m):
    for j in range(n):
        for k in range(p):
            print(i,j,k)

Time Complexity ===> O(m*n*p) ==> O(n^3)

Matrix Multiplication ==> O(n^3)

for i in range(n):
    for j in range(n-i):
        print(i,j)

Total Number of combinations ==> 
(0,0),(0,1),(0,2),(0,3),(0,4) - 5 
(1,0),(1,1),(1,2),(1,3) - 4
(2,0),(2,1),(2,2) - 3
(3,0),(3,1) - 2
(4,0) - 1

5+4+3+2+1 = n(n+1)/2

Time Complexity  n(n+1)/2 < n^2
================> O(n^2)
================> Omega(n(n+1)/2)
================> o(n^2)

for i in range(n):
    for j in range(n-i):
        for k in range(n-j):
            print(i,j,k)

Practise different combinations of for loops:

num = 0
while num<25:
    num = take_number()
    print(num)
